function onMIDISuccess(n){var i,t;for(midi=n,i=midi.inputs.values(),t=i.next();t&&!t.done;t=i.next())t.value.onmidimessage=gotMIDImessage}function gotMIDImessage(n){var t=document.createElement("li");t.appendChild(document.createTextNode(n.data));dataList.appendChild(t)}var dataList;OnScreenMidiInput=function(n){this.id=n;this.manufacturer="RumyraIndustries";this.name="HtmlMidiInputFaker";this.type="input";this.version=1;this.state="connected";this.connection="open";this.onstatechange=null;this.onmidimessage=null;this.open=function(){return};this.close=function(){return};this._listeners=(new Map).set("midimessage",new Set).set("statechange",new Set)};OnScreenMidiInput.prototype.addEventListener=function(n,t){var i=this._listeners.get(n);i!==undefined&&i.has(t)===!1&&i.add(t)};OnScreenMidiInput.prototype.removeEventListener=function(n,t){var i=this._listeners.get(n);i!==undefined&&i.has(t)===!1&&i.delete(t)};OnScreenMidiInput.prototype.dispatchEvent=function(n){var t=this._listeners.get(n.type);if(t.forEach(function(t){t(n)}),n.type==="midimessage"){if(this.onmidimessage!==null)this.onmidimessage(n)}else if(n.type==="statechange"&&this.onstatechange!==null)this.onstatechange(n)};FauxMidiAccess=function(n,t){this.inputs=n;this.outputs=t;this.onstatechange=null;this.sysexEnabled=!1};FauxMidiMessageEvent=function(n,t,i){this.bubbles=!1;this.cancelBubble=!1;this.cancelable=!1;this.currentTarget=n;this.data=t;this.defaultPrevented=!1;this.eventPhase=0;this.path=[];this.receivedTime=i;this.returnValue=!0;this.srcElement=n;this.target=n;this.timeStamp=Date.now();this.type="midimessage"};var MidiUxButton=function(n,t,i){this.eventHandlers={mousedown:function(i){var i=new FauxMidiMessageEvent(n,Uint8Array.from(t),performance.now());n.dispatchEvent(i)},mouseup:function(t){var t=new FauxMidiMessageEvent(n,Uint8Array.from(i),performance.now());n.dispatchEvent(t)}}},createMidiUxInput=function(n,t){if(!t.hasOwnProperty("type"))throw new Exception("Could not create Midi Input as data blob does not have a type property");if(t.type=="button")return new MidiUxButton(n,t.press,t.release);throw new Exception('Could not create Midi Input as data blob does not have a valid type property. Was "'+t.type+'"');},forEach=function(n,t,i){for(var r=0;r<n.length;r++)t.call(i,r,n[r])},midiEles=document.querySelectorAll("[data-midi]"),midi,data,myOnScreenMidiInput=new OnScreenMidiInput(1);forEach(midiEles,function(n,t){var u=JSON.parse(t.getAttribute("data-midi")),i=createMidiUxInput(myOnScreenMidiInput,u);for(var r in i.eventHandlers)t.addEventListener(r,i.eventHandlers[r])});midi=new FauxMidiAccess((new Map).set(myOnScreenMidiInput.id,myOnScreenMidiInput),new Map);onMIDISuccess(midi);dataList=document.querySelector("#midi-data ul");